"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformContinueStatement = exports.transformBreakStatement = void 0;
const CompilerOptions_1 = require("../../CompilerOptions");
const lua = require("../../LuaAST");
const diagnostics_1 = require("../utils/diagnostics");
const scope_1 = require("../utils/scope");
exports.transformBreakStatement = (breakStatement, context) => {
    const breakableScope = scope_1.findScope(context, scope_1.ScopeType.Loop | scope_1.ScopeType.Switch);
    if ((breakableScope === null || breakableScope === void 0 ? void 0 : breakableScope.type) === scope_1.ScopeType.Switch) {
        return lua.createGotoStatement(`____switch${breakableScope.id}_end`);
    }
    else {
        return lua.createBreakStatement(breakStatement);
    }
};
exports.transformContinueStatement = (statement, context) => {
    var _a;
    if (context.luaTarget === CompilerOptions_1.LuaTarget.Universal || context.luaTarget === CompilerOptions_1.LuaTarget.Lua51) {
        context.diagnostics.push(diagnostics_1.unsupportedForTarget(statement, "Continue statement", CompilerOptions_1.LuaTarget.Lua51));
    }
    const scope = scope_1.findScope(context, scope_1.ScopeType.Loop);
    if (scope) {
        scope.loopContinued = true;
    }
    return lua.createGotoStatement(`__continue${(_a = scope === null || scope === void 0 ? void 0 : scope.id) !== null && _a !== void 0 ? _a : ""}`, statement);
};
//# sourceMappingURL=break-continue.js.map